# See https://www.robotstxt.org/robotstxt.html for documentation on the robots.txt standard.

User-agent: *
Allow: /

Sitemap: https://icraftnow.github.io/MarkDown-File-Extractor/sitemap.xml
# ===================================================================
# General-purpose .gitignore file
#
# Generated by an expert AI assistant.
# This file is comprehensive and covers many common files and directories
# from different languages, frameworks, and tools.
# Customize it to your project's specific needs.
# ===================================================================

# #######################
# ## Operating Systems
# #######################

# macOS
.DS_Store
.AppleDouble
.LSOverride
.Spotlight-V100
.Trashes
._*
Icon?
ehthumbs.db
Thumbs.db

# Windows
desktop.ini
$RECYCLE.BIN/

# Linux
*~
.directory
.Trash-*

# #######################
# ## IDEs and Editors
# #######################

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# JetBrains (IntelliJ, PyCharm, WebStorm, etc.)
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/
packages/

# Vim
*.swp
*.swo
*~

# Emacs
*#
.#*

# NetBeans
nbproject/
build/
nbbuild/
dist/
nbdist/
.nb-gradle/

# Eclipse
.classpath
.project
.settings/
bin/
tmp/
.mtj.tmp/

# #######################
# ## Language Specific
# #######################

# Python
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
.pytest_cache/
.tox/
.venv/
venv/
ENV/
env/
pip-wheel-metadata/
.installed.cfg
*.egg-info
.mypy_cache/
.dmypy.json
dmypy.json

# JavaScript / Node.js
node_modules/
dist/
build/
.npm/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*
.pnp/
.pnp.js
.yarn/

# Java
*.class
*.log
*.jar
*.war
*.ear
target/
.gradle

# C / C++
*.o
*.a
*.so
*.exe
*.out
*.dll
*.obj
*.ilk
*.pdb
*.suo

# Ruby
.bundle/
vendor/bundle
log/
tmp/
.byebug_history

# Go
*.exe
*.exe~
*.dll
*.so
*.a
bin/
pkg/

# #######################
# ## Frameworks
# #######################

# Django
*.log
local_settings.py

# Rails
tmp/
log/
public/assets
.byebug_history

# Laravel
/vendor/
/public/hot
/public/storage
/storage/*.key
.env
.env.backup
.phpunit.result.cache
Homestead.yaml
Homestead.json
npm-debug.log
yarn-error.log

# #######################
# ## Tools
# #######################

# Package Managers
bower_components/
jspm_packages/

# Build tools
build/
dist/
out/

# Docker
.dockerignore
docker-compose.yml

# Vagrant
.vagrant/

# #######################
# ## Miscellaneous
# #######################

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.bak
*.swp

# Personal credentials
*.private
*.secret
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Primary SEO Meta Tags -->
    <title>MarkDown File Extractor - Extract & Download Code from Any File</title>
    <meta name="description" content="Effortlessly extract and download all code blocks from Markdown, text files, or pasted content. MarkDown File Extractor parses your files and presents every snippet, ready for individual download or as a complete ZIP archive.">
    <meta name="keywords" content="code extractor, markdown parser, download code, zip archive, developer tool, text processing, file parsing, iCraftNow, MarkDown File Extractor">
    <link rel="canonical" href="https://icraftnow.github.io/MarkDown-File-Extractor/">
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>✂️</text></svg>">

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://icraftnow.github.io/MarkDown-File-Extractor/">
    <meta property="og:title" content="MarkDown File Extractor - Extract & Download Code from Any File">
    <meta property="og:description" content="Effortlessly extract and download all code blocks from Markdown, text files, or pasted content. MarkDown File Extractor parses your files and presents every snippet, ready for individual download or as a complete ZIP archive.">
    <meta property="og:image" content="https://raw.githubusercontent.com/iCraftNow/MarkDown-File-Extractor/main/og-image.png">

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://icraftnow.github.io/MarkDown-File-Extractor/">
    <meta property="twitter:title" content="MarkDown File Extractor - Extract & Download Code from Any File">
    <meta property="twitter:description" content="Effortlessly extract and download all code blocks from Markdown, text files, or pasted content. MarkDown File Extractor parses your files and presents every snippet, ready for individual download or as a complete ZIP archive.">
    <meta property="twitter:image" content="https://raw.githubusercontent.com/iCraftNow/MarkDown-File-Extractor/main/og-image.png">
    
    <!-- Google Fonts - Material Design Typography & Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
    
    <!-- Highlight.js for syntax highlighting -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-dark.min.css">
    
    <!-- Main Stylesheet -->
    <link rel="stylesheet" href="style.css">

    <style>
        /* Styles for the new Share Modal */
        .modal-content .modal-section {
            margin-bottom: 20px;
        }
        .modal-content .modal-section:last-child {
            margin-bottom: 0;
        }
        .modal-section-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 8px;
        }
        .modal-section-header h3 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 500;
            color: var(--md-sys-color-on-surface);
        }
        .modal-section-header .material-icons-round {
            color: var(--md-sys-color-primary);
        }
        .modal-content .modal-section p {
            margin-top: 0;
            margin-bottom: 16px;
            color: var(--md-sys-color-on-surface-variant);
            font-size: 0.9rem;
            line-height: 1.5;
        }
        .modal-divider {
            border: none;
            border-top: 1px solid var(--md-sys-color-outline-variant);
            margin: 24px 0;
        }
        .share-actions, .follow-actions, .partner-actions {
            display: flex;
            gap: 12px;
            align-items: center;
        }
        .social-icon-button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--md-sys-color-surface-container-high);
            color: var(--md-sys-color-primary);
            transition: background-color 0.2s;
            border: none;
            cursor: pointer;
        }
        .social-icon-button:hover {
            background-color: var(--md-sys-color-surface-container-highest);
        }
        .social-icon-button svg {
            width: 20px;
            height: 20px;
        }
        .action-button .btn-icon {
            display: inline-flex;
            align-items: center;
            margin-right: 8px;
        }
        .action-button .btn-icon svg {
            width: 20px;
            height: 20px;
        }

        /* Styles for the new Download Popup */
        .popup-main-options {
            display: flex;
            gap: 20px;
            margin: 24px 0;
        }
        .popup-option {
            flex: 1;
            background-color: var(--md-sys-color-surface-container);
            border-radius: 12px;
            padding: 20px;
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
            border: 1px solid var(--md-sys-color-outline-variant);
        }
        .popup-option .option-icon {
            font-size: 36px;
            color: var(--md-sys-color-primary);
            margin-bottom: 12px;
        }
        .popup-option h3 {
            margin: 0 0 8px 0;
            font-size: 1.1rem;
            font-weight: 500;
            color: var(--md-sys-color-on-surface);
        }
        .popup-option p {
            margin: 0 0 16px 0;
            font-size: 0.9rem;
            color: var(--md-sys-color-on-surface-variant);
            flex-grow: 1;
            line-height: 1.5;
        }
        .popup-option .button-primary,
        .popup-option .button-secondary {
            width: 100%;
        }
        #downloadPopup .button-primary,
        #downloadPopup .button-secondary {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }
        #downloadPopup .popup-footer p {
            font-size: 0.9rem;
            color: var(--md-sys-color-on-surface-variant);
            text-align: center;
            max-width: 450px;
            margin-left: auto;
            margin-right: auto;
        }
        @media (max-width: 700px) {
            .popup-main-options {
                flex-direction: column;
            }
        }

        /* Styles for ZIP Code Modal input */
        .text-input {
            width: 100%;
            padding: 12px 16px;
            border-radius: 8px;
            border: 1px solid var(--md-sys-color-outline);
            background-color: var(--md-sys-color-surface-container-high);
            color: var(--md-sys-color-on-surface);
            font-size: 1rem;
            font-family: 'Roboto', sans-serif;
            box-sizing: border-box;
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        .text-input::placeholder {
            color: var(--md-sys-color-on-surface-variant);
            opacity: 0.7;
        }
        .text-input:focus {
            outline: none;
            border-color: var(--md-sys-color-primary);
            box-shadow: 0 0 0 2px color-mix(in srgb, var(--md-sys-color-primary) 25%, transparent);
        }

        /* Styles for Page Title */
        .page-title-container {
            text-align: center;
            margin-bottom: 2.5rem;
            padding-top: 1rem;
        }
        .main-title {
            font-size: 3.5rem;
            font-weight: 800;
            line-height: 1.1;
            margin-bottom: 0.75rem;
            background: linear-gradient(45deg, var(--md-sys-color-primary), var(--md-sys-color-tertiary, var(--md-sys-color-primary)));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-fill-color: transparent;
        }
        .subtitle {
            font-size: 1.15rem;
            color: var(--md-sys-color-on-surface-variant);
            max-width: 550px;
            margin: 0 auto;
            line-height: 1.6;
        }
        @media (max-width: 600px) {
            .main-title {
                font-size: 2.75rem;
            }
            .subtitle {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body data-theme="light">
    
    <!-- Top App Bar -->
    <header class="top-app-bar">
        <div class="app-title">
            <span class="material-icons-round">folder_special</span>
            <span>MarkDown File Extractor</span>
        </div>
        <div class="top-app-bar-actions">
            <button class="md-icon-button" id="resetApp" title="Start Over">
                <span class="material-icons-round">refresh</span>
            </button>
            <button class="md-icon-button" id="shareBtn" title="Share this tool">
                <span class="material-icons-round">share</span>
            </button>
            <button class="md-icon-button" id="themeToggle" title="Toggle theme">
                <span class="material-icons-round">dark_mode</span>
            </button>
        </div>
    </header>

    <!-- Main Container -->
    <main class="container">
        <!-- Page Title -->
        <section class="page-title-container">
            <h1 class="main-title">Extract Your Code</h1>
            <p class="subtitle">Instantly extract every code block from your documents and files.</p>
        </section>

        <!-- Upload Section -->
        <section class="upload-section" id="uploadSection">
            <div class="upload-area" id="uploadArea">
                <span class="material-icons-round">cloud_upload</span>
                <h2>Drop your Markdown or text file here</h2>
                <p>or click to browse • Supports .md and .txt files</p>
                <input type="file" id="fileInput" accept=".md,.txt" style="display: none;">
            </div>

            <textarea class="paste-area" id="pasteArea" placeholder="Or paste your content here...

MarkDown File Extractor finds all code blocks, like these:

&#x60;&#x60;&#x60;javascript
function hello() {
  console.log(&quot;World!&quot;);
}
&#x60;&#x60;&#x60;

---
File: script.js
console.log(&quot;Hello from another file!&quot;);
---

Just paste your content and let MarkDown File Extractor do the rest!"></textarea>
        </section>

        <!-- Results Section -->
        <section class="results-section" id="resultsSection" style="display: none;">
            <!-- Component cards will be injected here by script.js. The card below is a structural placeholder. -->
            <div class="file-card">
                <div class="file-card-header">
                    <div class="file-icon"><span class="material-icons-round">description</span></div>
                    <div class="file-info">
                        <div class="file-name" title="file-name.js">file-name.js</div>
                        <div class="file-meta">
                            <span class="file-ext">JS</span>
                            <span>1.2 KB</span>
                        </div>
                    </div>
                </div>
                <div class="first-line-preview">
                    <code>Initial line of code...</code>
                </div>
                <div class="file-actions">
                    <button class="action-button secondary copy-btn" title="Copy Code"><span class="material-icons-round">content_copy</span>Copy</button>
                    <button class="action-button secondary preview-btn" title="Preview Code"><span class="material-icons-round">visibility</span>Preview</button>
                    <button class="action-button download-btn" title="Download File"><span class="material-icons-round">download</span>Download</button>
                </div>
                <div class="code-preview"><pre><code></code></pre></div>
            </div>
        </section>
    </main>

    <!-- Floating Action Button (FAB) for exporting all files -->
    <button class="md-fab" id="downloadZipBtn" style="display: none;" title="Download All as ZIP">
        <span class="material-icons-round">archive</span>
    </button>

    <!-- Persuasive Popup / Modal -->
    <div class="modal-overlay" id="persuasivePopup" style="display: none;">
        <div class="modal-content">
            <button class="modal-close-btn" id="closePopupBtn" title="Close">
                <span class="material-icons-round">close</span>
            </button>
            <h2>Enjoying MarkDown File Extractor?</h2>
            <p>If this tool is saving you time, please consider giving it a star on GitHub! It helps other developers discover it and motivates future enhancements.</p>
            <div class="modal-actions">
                <a href="https://github.com/iCraftNow/MarkDown-File-Extractor" target="_blank" rel="noopener noreferrer" class="action-button" id="starOnGithubBtn">
                    <span class="material-icons-round">star</span>
                    Star on GitHub
                </a>
                <button class="action-button secondary" id="remindLaterBtn">Maybe Later</button>
            </div>
        </div>
    </div>

    <!-- Commercial Download Popup -->
    <div id="downloadPopup" class="popup-overlay" style="display: none;">
      <div class="popup-content">
        
        <header class="popup-header">
          <h2>Your Code is Extracted! ✨</h2>
          <p>Mission accomplished! We've extracted every snippet for you. What's your next move?</p>
        </header>
    
        <section class="popup-main-options">
            <div class="popup-option">
                <span class="material-icons-round option-icon">archive</span>
                <h3>Grab the Whole Shebang</h3>
                <p>Download all your extracted files in one neat ZIP archive. Perfect for quick transfers.</p>
                <a href="#" download class="button-primary">
                    <span class="material-icons-round">archive</span>
                    Download ZIP Archive
                </a>
            </div>
            <div class="popup-option">
                <span class="material-icons-round option-icon">source</span>
                <h3>Inspect Your Loot</h3>
                <p>Want to preview, copy, or download files one-by-one? Jump straight to the results.</p>
                <button class="button-secondary" id="viewFilesBtn">
                    <span class="material-icons-round">visibility</span>
                    View Individual Files
                </button>
            </div>
        </section>
    
        <footer class="popup-footer">
          <h3>Did MarkDown File Extractor just save your day?</h3>
          <p>If this tool helped you out, a quick share is the best way to say thanks! It helps other devs find us.</p>
          <div class="actions-container" style="justify-content: center; gap: 12px;">
              <button id="copyLinkBtnPopup" class="button-secondary">
                <span class="material-icons-round">link</span>
                Copy Share Link
              </button>
              <button class="button-secondary" id="shareToolBtnPopup">
                <span class="material-icons-round">share</span>
                More Share Options
              </button>
          </div>
        </footer>
    
      </div>
    </div>

    <!-- Share & Follow Modal -->
    <div class="modal-overlay" id="shareModal" style="display: none;">
        <div class="modal-content">
            <button class="modal-close-btn" id="closeShareModalBtn" title="Close">
                <span class="material-icons-round">close</span>
            </button>
            
            <h2 style="text-align: center; margin-top: 0; font-size: 1.6rem; font-weight: 500; color: var(--md-sys-color-on-surface);">Share the Love & Stay Connected</h2>
            <p style="text-align: center; margin-top: 8px; margin-bottom: 24px; color: var(--md-sys-color-on-surface-variant);">Your support helps us create more tools for developers like you.</p>

            <!-- Share Section -->
            <div class="modal-section">
                <div class="modal-section-header">
                    <span class="material-icons-round">share</span>
                    <h3>Spread the Word</h3>
                </div>
                <p>If you find MarkDown File Extractor useful, please share it with your network!</p>
                <div class="share-actions">
                    <button class="action-button secondary" id="copyLinkBtn">
                        <span class="material-icons-round">link</span>
                        Copy Link
                    </button>
                    <a href="https://twitter.com/intent/tweet?text=Check%20out%20MarkDown%20File%20Extractor%2C%20a%20tool%20that%20extracts%20and%20downloads%20all%20code%20blocks%20from%20text.%20A%20real%20time-saver!&url=https://icraftnow.github.io/MarkDown-File-Extractor/" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Share on X (Twitter)">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/></svg>
                    </a>
                    <a href="https://www.linkedin.com/shareArticle?mini=true&url=https://icraftnow.github.io/MarkDown-File-Extractor/&title=MarkDown%20File%20Extractor%20-%20Extract%20%26%20Download%20Code%20from%20Any%20File&summary=A%20tool%20that%20extracts%20and%20downloads%20all%20code%20blocks%20from%20text.%20A%20real%20time-saver%20for%20developers!" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Share on LinkedIn">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z"/></svg>
                    </a>
                    <a href="https://www.facebook.com/sharer/sharer.php?u=https://icraftnow.github.io/MarkDown-File-Extractor/" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Share on Facebook">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M14 13.5h2.5l1-4H14v-2c0-1.03 0-2 2-2h1.5V2.14c-.326-.043-1.557-.14-2.857-.14C11.928 2 10 3.657 10 6.7v2.8H7v4h3v9h4v-9z"/></svg>
                    </a>
                    <a href="https://www.reddit.com/submit?url=https://icraftnow.github.io/MarkDown-File-Extractor/&title=MarkDown%20File%20Extractor%20-%20A%20handy%20tool%20to%20extract%20and%20download%20code%20blocks%20from%20any%20file." target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Share on Reddit">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M12,2C6.477,2,2,6.477,2,12c0,4.16,2.543,7.74,6.18,9.25L7,17.47V15c0-0.553,0.447-1,1-1h8c0.553,0,1,0.447,1,1v2.47l-1.18-3.78 C19.457,19.74,22,16.16,22,12C22,6.477,17.523,2,12,2z M8.5,12c-0.828,0-1.5-0.672-1.5-1.5S7.672,9,8.5,9S10,9.672,10,10.5 S9.328,12,8.5,12z M15.5,12c-0.828,0-1.5-0.672-1.5-1.5S14.672,9,15.5,9S17,9.672,17,10.5S16.328,12,15.5,12z M12,17 c-1.657,0-3-1.343-3-3h6C15,15.657,13.657,17,12,17z"/></svg>
                    </a>
                </div>
            </div>

            <!-- Divider -->
            <hr class="modal-divider">

            <!-- Follow Section -->
            <div class="modal-section">
                <div class="modal-section-header">
                    <span class="material-icons-round">group_add</span>
                    <h3>Join Our Community</h3>
                </div>
                <p>Follow us for updates, new tools, and behind-the-scenes content.</p>
                <div class="follow-actions" style="flex-wrap: wrap; justify-content: center;">
                    <a href="https://github.com/iCraftNow/MarkDown-File-Extractor" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Follow on GitHub">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5.5.09.68-.22.68-.48v-1.7c-2.78.6-3.37-1.34-3.37-1.34-.45-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.89 1.52 2.34 1.08 2.91.83.09-.65.35-1.08.63-1.34-2.22-.25-4.55-1.11-4.55-4.94 0-1.1.39-1.99 1.03-2.69a3.6 3.6 0 0 1 .1-2.64s.84-.27 2.75 1.02a9.58 9.58 0 0 1 5 0c1.91-1.29 2.75-1.02 2.75-1.02.55 1.37.2 2.4.1 2.64.64.7 1.03 1.6 1.03 2.69 0 3.84-2.34 4.68-4.57 4.93.36.31.68.92.68 1.85v2.74c0 .27.18.58.69.48A10 10 0 0 0 22 12 10 10 0 0 0 12 2Z"/></svg>
                    </a>
                    <a href="https://x.com/icraft_now" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Follow on X (Twitter)">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/></svg>
                    </a>
                    <a href="https://www.instagram.com/icraft_now/" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Follow on Instagram">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.85s-.011 3.584-.069 4.85c-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07s-3.584-.012-4.85-.07c-3.252-.148-4.771-1.691-4.919-4.919-.058-1.265-.069-1.645-.069-4.85s.011-3.584.069-4.85c.149-3.225 1.664-4.771 4.919-4.919C8.416 2.175 8.796 2.163 12 2.163m0-2.163C8.74 0 8.333.01 7.053.062 2.695.272.273 2.69.063 7.053.01 8.333 0 8.74 0 12s.01 3.667.063 4.947c.21 4.36 2.632 6.782 7.004 6.992C8.333 23.99 8.74 24 12 24s3.667-.01 4.947-.063c4.372-.21 6.794-2.632 6.992-7.004.053-1.28.063-1.687.063-4.947s-.01-3.667-.063-4.947C21.728 2.69 19.306.272 14.947.062 13.667.01 13.26 0 12 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.88 1.44 1.44 0 000-2.88z"/></svg>
                    </a>
                    <a href="https://www.tiktok.com/@icraftnow" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Follow on TikTok">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M12.525.02c1.31-.02 2.61-.01 3.91.02.08 1.53.63 3.09 1.75 4.17 1.12 1.11 2.7 1.62 4.24 1.79v4.03c-1.44-.05-2.89-.35-4.2-.97-.57-.26-1.1-.59-1.62-.93-.01 2.92.01 5.84-.02 8.75-.08 1.4-.54 2.79-1.35 3.94-1.31 1.92-3.58 3.17-5.91 3.21-2.43.05-4.84-.95-6.43-2.8-1.59-1.87-2.16-4.56-1.52-6.81.61-2.19 2.1-4.15 3.96-5.45 1.86-1.3 4.09-1.9 6.32-1.74.03 1.43-.01 2.86-.01 4.28.01 1.39-.49 2.78-1.42 3.75-1.31 1.33-3.33 1.8-5.17 1.23-.42-.13-.82-.31-1.2-.5-.02-1.02.01-2.04.01-3.06.01-2.2 1.67-4.02 3.85-4.21 2.22-.2 4.22.99 5.12 2.99.11.25.17.52.2.78v-3.33a2.36 2.36 0 00-1.7-2.11c-.3-.08-.6-.15-.9-.23-.02-2.52.01-5.04-.02-7.56z"/></svg>
                    </a>
                    <a href="https://t.me/icraftnow_bot" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Contact on Telegram">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15.91L18.22 22c-.21.57-.76.72-1.26.44l-4.49-3.3-2.13 2.05c-.23.23-.44.43-.71.43-.49 0-.57-.22-.52-.7z"/></svg>
                    </a>
                    <a href="https://www.facebook.com/profile.php?id=61580835406672" target="_blank" rel="noopener noreferrer" class="social-icon-button" title="Follow on Facebook">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M14 13.5h2.5l1-4H14v-2c0-1.03 0-2 2-2h1.5V2.14c-.326-.043-1.557-.14-2.857-.14C11.928 2 10 3.657 10 6.7v2.8H7v4h3v9h4v-9z"/></svg>
                    </a>
                </div>
            </div>

            <!-- Divider -->
            <hr class="modal-divider">

            <!-- Partner Section -->
            <div class="modal-section">
                <div class="modal-section-header">
                    <span class="material-icons-round">business_center</span>
                    <h3>Collaborate With Us</h3>
                </div>
                <p>Have a business inquiry or want to collaborate on a project? We'd love to hear from you.</p>
                <div class="partner-actions" style="justify-content: center;">
                    <a href="mailto:icraft.open.source@gmail.com" class="action-button">
                        <span class="material-icons-round">email</span>
                        Contact Us
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Email Capture Modal -->
    <div class="modal-overlay" id="zipCodeModal" style="display: none;">
        <div class="modal-content">
            <button class="modal-close-btn" id="closeZipCodeModalBtn" title="Close">
                <span class="material-icons-round">close</span>
            </button>
            
            <h2 style="text-align: center; margin-top: 0; font-size: 1.5rem; font-weight: 500; color: var(--md-sys-color-on-surface);">Get Notified About New Features</h2>
            
            <p style="text-align: center; margin-top: 8px; margin-bottom: 24px; color: var(--md-sys-color-on-surface-variant);">Enter your email to receive updates about MarkDown File Extractor and other developer tools.</p>
            
            <div style="margin-bottom: 16px;">
                <input type="text" id="zipCodeInput" class="text-input" placeholder="Enter your email address" autofocus>
                <p id="zipCodeError" style="color: var(--md-sys-color-error); font-size: 0.8rem; margin-top: 4px; margin-bottom: 0; text-align: left; padding-left: 4px; display: none;">Please enter a valid email address.</p>
            </div>

            <div class="modal-actions" style="justify-content: center;">
                <button class="action-button" id="submitZipCodeBtn" style="width: 100%; max-width: 320px;">
                    Subscribe
                </button>
                <a href="#" id="modalDownloadBtn" class="action-button" download style="display: none; width: 100%; max-width: 320px; justify-content: center;">
                    <span class="material-icons-round">download</span>
                    Download Now
                </a>
            </div>

            <p style="font-size: 0.8rem; color: var(--md-sys-color-on-surface-variant); text-align: center; margin-top: 16px; margin-bottom: 0; display: flex; align-items: center; justify-content: center; gap: 6px;">
                <span class="material-icons-round" style="font-size: 1rem;">lock</span>
                Your privacy is respected. No spam.
            </p>
        </div>
    </div>

    <!-- Snackbar for notifications -->
    <div id="snackbar"></div>

    <!-- External Libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
    
    <!-- Main Script -->
    <script src="script.js"></script>
</body>
</html>
'use strict';

document.addEventListener('DOMContentLoaded', () => {

    // --- Core Configuration & Application State ---
    const socialLinks = {
        Instagram: "https://www.instagram.com/icraft_now/",
        X: "https://x.com/icraft_now",
        TikTok: "https://www.tiktok.com/@icraftnow",
        Telegram: "https://t.me/icraftnow_bot",
        Facebook: "https://www.facebook.com/profile.php?id=61580835406672",
        GitHub: "https://github.com/iCraftNow/MarkDown-File-Extractor",
    };
    let extractedFiles = [];
    let currentZipUrl = null; // To hold the generated ZIP blob URL for reuse

    // --- DOM Element Cache ---
    const dom = {
        appTitle: document.querySelector('.app-title'),
        resetApp: document.getElementById('resetApp'),
        uploadArea: document.getElementById('uploadArea'),
        fileInput: document.getElementById('fileInput'),
        pasteArea: document.getElementById('pasteArea'),
        filesGrid: document.getElementById('resultsSection'),
        downloadAllFab: document.getElementById('downloadZipBtn'),
        themeToggle: document.getElementById('themeToggle'),
        shareBtn: document.getElementById('shareBtn'),
        uploadSection: document.getElementById('uploadSection'),
        toast: document.getElementById('snackbar'),
        mainFooter: null, // Created dynamically
        // --- Download Modal Elements ---
        downloadPopup: document.getElementById('downloadPopup'),
        downloadZipLink: document.querySelector('#downloadPopup .button-primary'),
        copyLinkBtnPopup: document.getElementById('copyLinkBtnPopup'),
        viewFilesBtn: document.getElementById('viewFilesBtn'),
        shareToolBtnPopup: document.getElementById('shareToolBtnPopup'),
        // --- Share Modal Elements ---
        shareModal: document.getElementById('shareModal'),
        closeShareModalBtn: document.getElementById('closeShareModalBtn'),
        copyLinkBtn: document.getElementById('copyLinkBtn'),
        // --- Lead Capture (Email) Modal Elements ---
        zipCodeModal: document.getElementById('zipCodeModal'), // Note: Now used for email capture
        closeZipCodeModalBtn: document.getElementById('closeZipCodeModalBtn'),
        submitZipCodeBtn: document.getElementById('submitZipCodeBtn'),
        zipCodeInput: document.getElementById('zipCodeInput'), // Note: Now an email input
        zipCodeError: document.getElementById('zipCodeError'),
    };
    
    // --- Initialization ---
    function init() {
        setupEventListeners();
        loadTheme();
        createAndGenerateFooter();
    }

    // --- Event Listener Setup ---
    function setupEventListeners() {
        // Drag and Drop / File Input
        dom.uploadArea.addEventListener('click', () => dom.fileInput.click());
        dom.uploadArea.addEventListener('dragover', e => { e.preventDefault(); dom.uploadArea.classList.add('dragover'); });
        dom.uploadArea.addEventListener('dragleave', () => dom.uploadArea.classList.remove('dragover'));
        dom.uploadArea.addEventListener('drop', handleFileDrop);
        dom.fileInput.addEventListener('change', e => handleFileUpload(e.target.files[0]));

        // Main Actions
        dom.pasteArea.addEventListener('paste', () => setTimeout(() => parseContent(dom.pasteArea.value), 0));
        dom.downloadAllFab.addEventListener('click', downloadAllFilesAsZip);
        
        // App Reset
        if (dom.resetApp) {
            dom.resetApp.addEventListener('click', resetApplication);
        }
        if (dom.appTitle) {
            dom.appTitle.style.cursor = 'pointer';
            dom.appTitle.addEventListener('click', resetApplication);
        }
        
        // UI Controls
        dom.themeToggle.addEventListener('click', toggleTheme);
        dom.shareBtn.addEventListener('click', showShareModal);
        
        // Modals
        if (dom.copyLinkBtnPopup) {
            dom.copyLinkBtnPopup.addEventListener('click', (e) => handleCopyLink(e.currentTarget));
        }
        if (dom.shareModal) {
            dom.closeShareModalBtn.addEventListener('click', hideShareModal);
            dom.shareModal.addEventListener('click', (e) => {
                if (e.target === dom.shareModal) hideShareModal();
            });
            dom.copyLinkBtn.addEventListener('click', (e) => handleCopyLink(e.currentTarget));
        }
        
        // Efficient Event Delegation for dynamic content
        dom.filesGrid.addEventListener('click', handleGridClick);

        // Email Capture Modal Listeners (formerly ZIP Code)
        if (dom.zipCodeModal) {
            dom.closeZipCodeModalBtn.addEventListener('click', hideZipCodeModal);
            dom.submitZipCodeBtn.addEventListener('click', handleSubmitEmail);
            dom.zipCodeModal.addEventListener('click', (e) => {
                if (e.target === dom.zipCodeModal) {
                    hideZipCodeModal();
                }
            });
            dom.zipCodeInput.addEventListener('keydown', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    handleSubmitEmail();
                }
            });
            // Clear error state when user starts typing
            dom.zipCodeInput.addEventListener('input', () => {
                if (dom.zipCodeInput.classList.contains('invalid')) {
                    dom.zipCodeInput.classList.remove('invalid');
                    dom.zipCodeError.style.display = 'none';
                }
            });
        }
    }

    // --- File Handling & Parsing ---
    function handleFileDrop(e) {
        e.preventDefault();
        dom.uploadArea.classList.remove('dragover');
        handleFileUpload(e.dataTransfer.files[0]);
    }
    
    function handleFileUpload(file) {
        if (!file) return;
        const reader = new FileReader();
        reader.onload = e => {
            dom.pasteArea.value = e.target.result;
            showToast(`File "${file.name}" loaded. Ready to process.`, 'success');
            parseContent(e.target.result);
        };
        reader.readAsText(file);
    }

    /**
     * Intelligent parser that handles multiple formats:
     * 1. Custom Delimiter: `========== File Start: ...`
     * 2. Simple Delimiter: `File: ... ---`
     * 3. Standard Markdown: ```language:filename
     */
    function parseContent(content) {
        if (!content.trim()) {
            showToast('Input is empty. Please paste content or upload a file.', 'error');
            return;
        }

        let files = [];
        let remainingContent = content;

        // 1. Parse custom delimiter format
        const customDelimiterRegex = /=+\s*File Start:\s*(.+?)\s*=+\s*\n([\s\S]*?)\n=+\s*File End:\s*\1\s*=+?/gi;
        remainingContent = remainingContent.replace(customDelimiterRegex, (match, fileName, fileContent) => {
            files.push({ name: fileName.trim(), content: fileContent.trim() });
            return ''; // Remove matched block
        });

        // 2. Parse simple "File: ..." format
        const simpleFileRegex = /(?:^|\n)File:\s*(.+?)\n([\s\S]*?)\n---/g;
        remainingContent = remainingContent.replace(simpleFileRegex, (match, fileName, fileContent) => {
            files.push({ name: fileName.trim(), content: fileContent.trim() });
            return ''; // Remove matched block
        });

        // 3. Parse standard markdown fence format on remaining content
        const markdownRegex = /```(\S*)\n([\s\S]*?)\n```/g;
        let match;
        while ((match = markdownRegex.exec(remainingContent)) !== null) {
            const languageOrName = match[1].trim();
            const fileContent = match[2].trim();
            if (!fileContent) continue;

            const fileName = languageOrName.includes('.') || languageOrName.includes('/')
                ? languageOrName
                : `file-${files.length + 1}.${languageOrName || 'txt'}`;
            
            files.push({ name: fileName, content: fileContent });
        }

        if (files.length === 0) {
            showToast('No extractable code blocks found. Please check the input format.', 'error');
            return;
        }

        // Process and enrich file data
        extractedFiles = files.map(file => ({
            ...file,
            id: file.name.replace(/[^a-zA-Z0-9]/g, '_') + '_' + Math.random().toString(36).substr(2, 9),
            extension: file.name.split('.').pop() || 'txt',
            size: new Blob([file.content]).size,
            lines: file.content.split('\n').length,
        }));

        updateUIOnSuccess();
    }
    
    function updateUIOnSuccess() {
        displayFiles();
        showToast(`✨ Success! Extracted ${extractedFiles.length} files.`, 'success');
        dom.uploadSection.style.display = 'none';
        dom.filesGrid.style.display = 'grid';
        dom.filesGrid.classList.add('files-grid');
        dom.downloadAllFab.style.display = 'flex';
        downloadAllFilesAsZip(); // Automatically trigger the ZIP creation and show the download modal.
    }

    function resetApplication(e) {
        if (e) e.preventDefault();

        // 1. Reset state variables
        extractedFiles = [];
        if (currentZipUrl) {
            URL.revokeObjectURL(currentZipUrl);
            currentZipUrl = null;
        }

        // 2. Reset UI elements to initial state
        dom.uploadSection.style.display = 'flex';
        dom.filesGrid.style.display = 'none';
        dom.filesGrid.innerHTML = '';
        dom.downloadAllFab.style.display = 'none';
        
        // 3. Reset form inputs
        dom.pasteArea.value = '';
        dom.fileInput.value = null;

        // 4. UX: Scroll to top and show a confirmation toast
        window.scrollTo({ top: 0, behavior: 'smooth' });
        showToast('Ready for a new task!', 'success');
    }

    // --- Dynamic UI Rendering ---
    function displayFiles() {
        const filesToDisplay = extractedFiles;

        if (filesToDisplay.length === 0) {
            dom.filesGrid.innerHTML = `<div class="empty-state">
                <span class="material-icons-round">search_off</span>
                <h3>No Files Found</h3>
                <p>No code blocks were detected in your input. Please try again with a different format.</p>
            </div>`;
            dom.filesGrid.classList.remove('files-grid');
            dom.filesGrid.style.display = 'block';
        } else {
            dom.filesGrid.innerHTML = filesToDisplay.map(createFileCardHTML).join('');
            dom.filesGrid.classList.add('files-grid');
            dom.filesGrid.style.display = 'grid';
        }
    }

    function createFileCardHTML(file) {
        const icon = getFileIcon(file.extension);
        const language = getLanguageClass(file.extension);
        const sizeKB = (file.size / 1024).toFixed(2);
        let firstLine = (file.content.split('\n')[0] || '').trim();
        if (firstLine.length > 100) {
            firstLine = firstLine.substring(0, 100) + '...';
        }
        firstLine = escapeHtml(firstLine);

        return `
            <div class="file-card" data-file-id="${file.id}">
                <div class="file-card-header">
                    <div class="file-icon"><span class="material-icons-round">${icon}</span></div>
                    <div class="file-info">
                        <div class="file-name" title="${file.name}">${file.name}</div>
                        <div class="file-meta">
                            <span class="file-ext">${file.extension.toUpperCase()}</span>
                            <span>${sizeKB} KB</span>
                            <span>${file.lines} lines</span>
                        </div>
                    </div>
                </div>
                <div class="first-line-preview">
                    <code>${firstLine || '&nbsp;'}</code>
                </div>
                <div class="file-actions">
                    <button class="action-button secondary copy-btn" title="Copy Code"><span class="material-icons-round">content_copy</span>Copy</button>
                    <button class="action-button secondary preview-btn" title="Preview Code"><span class="material-icons-round">visibility</span>Preview</button>
                    <button class="action-button download-btn" title="Download File"><span class="material-icons-round">download</span>Download</button>
                </div>
                <div class="code-preview"><pre><code class="language-${language}">${escapeHtml(file.content)}</code></pre></div>
            </div>`;
    }

    // --- Delegated Event Handler ---
    function handleGridClick(e) {
        const card = e.target.closest('.file-card');
        if (!card) return;

        const file = extractedFiles.find(f => f.id === card.dataset.fileId);
        if (!file) return;

        if (e.target.closest('.preview-btn') || e.target.closest('.file-card-header')) {
            togglePreview(card);
        } else if (e.target.closest('.download-btn')) {
            downloadFile(file);
        } else if (e.target.closest('.copy-btn')) {
            copyFileContent(file, e.target.closest('.copy-btn'));
        }
    }

    function togglePreview(cardElement) {
        const isExpanded = cardElement.classList.toggle('expanded');
        if (isExpanded) {
            const codeBlock = cardElement.querySelector('code');
            if (!codeBlock.dataset.highlighted) {
                hljs.highlightElement(codeBlock);
                codeBlock.dataset.highlighted = 'true';
            }
        }
    }

    // --- File Actions ---
    async function copyFileContent(file, button) {
        try {
            await navigator.clipboard.writeText(file.content);
            showToast(`Copied "${file.name}" to clipboard.`, 'success');
            
            // Provide visual feedback on the button
            const icon = button.querySelector('.material-icons-round');
            const originalIcon = icon.textContent;
            const originalText = button.childNodes[1].nodeValue; // "Copy" text node
            
            icon.textContent = 'check';
            button.childNodes[1].nodeValue = 'Copied';
            button.disabled = true;

            setTimeout(() => {
                icon.textContent = originalIcon;
                button.childNodes[1].nodeValue = originalText;
                button.disabled = false;
            }, 2000);

        } catch (err) {
            showToast('Could not copy to clipboard.', 'error');
            console.error('Clipboard API error:', err);
        }
    }

    function downloadFile(file) {
        const blob = new Blob([file.content], { type: 'text/plain;charset=utf-8' });
        const url = URL.createObjectURL(blob);
        const a = Object.assign(document.createElement('a'), { href: url, download: file.name });
        a.click();
        URL.revokeObjectURL(url);
        showToast(`Downloading "${file.name}"...`, 'success');
    }

    async function downloadAllFilesAsZip() {
        if (extractedFiles.length === 0) return;
        showToast('Preparing your ZIP file...', 'success');
        const zip = new JSZip();
        extractedFiles.forEach(file => zip.file(file.name, file.content));
        
        const content = await zip.generateAsync({ type: 'blob' });
        
        // Revoke the old URL if it exists, to prevent memory leaks
        if (currentZipUrl) {
            URL.revokeObjectURL(currentZipUrl);
        }
        
        currentZipUrl = URL.createObjectURL(content);
        const filename = 'extracted_code.zip';

        showCommercialDownloadPopup(currentZipUrl, filename);
    }

    // --- Download Modal Logic ---
    let popupOverlayClickHandler;
    let popupDownloadClickHandler;
    let popupViewFilesClickHandler;
    let popupShareClickHandler;

    function showCommercialDownloadPopup(zipUrl, zipName) {
        if (!dom.downloadPopup || !dom.downloadZipLink || !dom.viewFilesBtn || !dom.shareToolBtnPopup) return;

        // Configure the download link
        dom.downloadZipLink.href = zipUrl;
        dom.downloadZipLink.download = zipName;

        // Show the popup
        dom.downloadPopup.style.display = 'flex';
        requestAnimationFrame(() => {
            dom.downloadPopup.classList.add('visible');
        });

        // Define handlers
        popupDownloadClickHandler = () => {
            showToast('Your ZIP download has started!', 'success');
            // After download is initiated, display the lead capture modal.
            setTimeout(showZipCodeModal, 2500);
            hideCommercialDownloadPopup();
        };
        
        popupOverlayClickHandler = (e) => {
            if (e.target === dom.downloadPopup) {
                hideCommercialDownloadPopup();
            }
        };

        popupViewFilesClickHandler = () => {
            hideCommercialDownloadPopup();
        };

        popupShareClickHandler = () => {
            hideCommercialDownloadPopup();
            // A small delay can make the transition smoother
            setTimeout(showShareModal, 150);
        };

        // Add listeners
        dom.downloadZipLink.addEventListener('click', popupDownloadClickHandler);
        dom.downloadPopup.addEventListener('click', popupOverlayClickHandler);
        dom.viewFilesBtn.addEventListener('click', popupViewFilesClickHandler);
        dom.shareToolBtnPopup.addEventListener('click', popupShareClickHandler);
    }

    function hideCommercialDownloadPopup() {
        if (!dom.downloadPopup) return;

        // The URL is no longer revoked here to allow reuse in the next modal.
        // It will be revoked when a new ZIP is generated.

        // Hide the popup
        dom.downloadPopup.classList.remove('visible');
        dom.downloadPopup.addEventListener('transitionend', () => {
            if (dom.downloadPopup) {
                dom.downloadPopup.style.display = 'none';
            }
        }, { once: true });

        // Clean up listeners
        if (dom.downloadZipLink) dom.downloadZipLink.removeEventListener('click', popupDownloadClickHandler);
        dom.downloadPopup.removeEventListener('click', popupOverlayClickHandler);
        if (dom.viewFilesBtn) dom.viewFilesBtn.removeEventListener('click', popupViewFilesClickHandler);
        if (dom.shareToolBtnPopup) dom.shareToolBtnPopup.removeEventListener('click', popupShareClickHandler);
    }

    async function handleCopyLink(button) {
        if (!button) return;
        try {
            await navigator.clipboard.writeText(window.location.href);
            showToast('Share link copied to clipboard!', 'success');

            const originalContent = button.innerHTML;
            button.innerHTML = `<span class="material-icons-round">check</span> Copied`;
            button.disabled = true;

            setTimeout(() => {
                button.innerHTML = originalContent;
                button.disabled = false;
            }, 2500);

        } catch (err) {
            showToast('Could not copy the link.', 'error');
            console.error('Clipboard API error:', err);
        }
    }

    // --- Share Modal ---
    function showShareModal() {
        if (!dom.shareModal) return;
        dom.shareModal.style.display = 'flex';
        requestAnimationFrame(() => {
            dom.shareModal.classList.add('visible');
        });
    }

    function hideShareModal() {
        if (!dom.shareModal) return;
        dom.shareModal.classList.remove('visible');
        dom.shareModal.addEventListener('transitionend', () => {
            if (dom.shareModal) {
                dom.shareModal.style.display = 'none';
            }
        }, { once: true });
    }

    // --- Lead Capture Modal ---
    function showZipCodeModal() {
        // Display modal only once per session to avoid being intrusive.
        if (sessionStorage.getItem('zipModalShown') || !dom.zipCodeModal) return;

        dom.zipCodeModal.style.display = 'flex';
        requestAnimationFrame(() => {
            dom.zipCodeModal.classList.add('visible');
            dom.zipCodeInput.focus();
        });
        sessionStorage.setItem('zipModalShown', 'true');
    }

    function hideZipCodeModal() {
        if (!dom.zipCodeModal) return;
        dom.zipCodeModal.classList.remove('visible');
        dom.zipCodeModal.addEventListener('transitionend', () => {
            if (dom.zipCodeModal) {
                dom.zipCodeModal.style.display = 'none';
                // Reset the form for a clean state on next open.
                dom.zipCodeInput.value = '';
                dom.zipCodeInput.classList.remove('invalid');
                if (dom.zipCodeError) dom.zipCodeError.style.display = 'none';
            }
        }, { once: true });
    }

    function handleSubmitEmail() {
        const email = dom.zipCodeInput.value.trim();
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        if (emailRegex.test(email)) {
            console.log(`Email submitted: ${email}`);
            showToast('Thank you for subscribing!', 'success');
            
            const modalContentEl = dom.zipCodeModal.querySelector('.modal-content');
            if (!modalContentEl) return;

            const downloadButtonHTML = currentZipUrl
                ? `<a href="${currentZipUrl}" download="extracted_code.zip" class="action-button" style="margin-top: 24px; justify-content: center; width: 100%; max-width: 320px; margin-left: auto; margin-right: auto;">
                       <span class="material-icons-round">download</span>
                       Download Your Files Again
                   </a>`
                : '';

            const thankYouContent = `
                <button class="modal-close-btn" title="Close">
                    <span class="material-icons-round">close</span>
                </button>
                <div style="text-align: center;">
                    <span class="material-icons-round" style="font-size: 48px; color: var(--md-sys-color-primary); margin-bottom: 16px; display: block;">check_circle</span>
                    <h2 style="text-align: center; margin-top: 0; font-size: 1.5rem; font-weight: 500; color: var(--md-sys-color-on-surface);">Subscription Confirmed!</h2>
                    <p style="text-align: center; margin-top: 8px; margin-bottom: 24px; color: var(--md-sys-color-on-surface-variant);">You'll be the first to know about new features and tools.</p>
                    <div class="modal-actions" style="justify-content: center;">
                        ${downloadButtonHTML}
                    </div>
                </div>
            `;
            modalContentEl.innerHTML = thankYouContent;

            modalContentEl.querySelector('.modal-close-btn').addEventListener('click', hideZipCodeModal);
        } else {
            dom.zipCodeInput.classList.add('invalid');
            dom.zipCodeError.style.display = 'block';
            dom.zipCodeInput.focus();
        }
    }

    // --- Footer ---
    function createAndGenerateFooter() {
        const footer = document.createElement('footer');
        footer.id = 'main-footer';
        document.body.appendChild(footer);
        dom.mainFooter = footer;
        generateFooter();
    }

    function generateFooter() {
        const socialHTML = Object.entries(socialLinks)
            .map(([name, url]) => `<a href="${url}" target="_blank" rel="noopener noreferrer">${name}</a>`)
            .join('');
        dom.mainFooter.innerHTML = `
            <div class="social-links">${socialHTML}</div>
            <p class="footer-credit">Crafted with <span class="heart">❤️</span> by the <a href="https://icraftnow.com/" target="_blank" rel="noopener noreferrer">IcraftNow Team</a></p>
            <div style="margin-top: 16px;">
                <a href="https://icraftnow.com/tools/" target="_blank" rel="noopener noreferrer" class="md-button">
                    <span class="material-icons-round">construction</span>
                    Explore More Tools
                </a>
            </div>`;
    }

    // --- Utility & Theme Functions ---
    function showToast(message, type = 'success') {
        dom.toast.className = `toast ${type}`;
        const iconName = type === 'success' ? 'check_circle' : 'error';
        dom.toast.innerHTML = `<span class="material-icons-round">${iconName}</span><span>${message}</span>`;
        dom.toast.classList.add('show');
        setTimeout(() => {
            dom.toast.classList.remove('show');
        }, 3000);
    }

    function toggleTheme() {
        const newTheme = document.body.dataset.theme === 'light' ? 'dark' : 'light';
        document.body.dataset.theme = newTheme;
        localStorage.setItem('theme', newTheme);
        dom.themeToggle.querySelector('.material-icons-round').textContent = newTheme === 'light' ? 'dark_mode' : 'light_mode';
    }

    function loadTheme() {
        const savedTheme = localStorage.getItem('theme') || 'light';
        document.body.dataset.theme = savedTheme;
        dom.themeToggle.querySelector('.material-icons-round').textContent = savedTheme === 'light' ? 'dark_mode' : 'light_mode';
    }

    // --- Helpers ---
    const getFileIcon = ext => ({ js: 'javascript', ts: 'code', py: 'code', java: 'code', html: 'html', css: 'style', json: 'data_object', md: 'description', sql: 'storage', sh: 'terminal' }[ext.toLowerCase()] || 'description');
    const getLanguageClass = ext => ({ js: 'javascript', ts: 'typescript', py: 'python', java: 'java', cs: 'csharp', go: 'go', rs: 'rust', html: 'xml', css: 'css', json: 'json', sql: 'sql', sh: 'bash', md: 'markdown' }[ext.toLowerCase()] || 'plaintext');
    const escapeHtml = text => text.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");

    // --- Start The App ---
    init();
});
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&family=Roboto+Mono:wght@400;500&display=swap');

/* ===== VISUAL DESIGN SYSTEM: MATERIAL 3 TOKENS ===== */
:root {
    /* Color Palette - Light Theme */
    --md-sys-color-primary: #006399;
    --md-sys-color-on-primary: #FFFFFF;
    --md-sys-color-primary-container: #CDE5FF;
    --md-sys-color-on-primary-container: #001E31;
    --md-sys-color-secondary: #51606F;
    --md-sys-color-on-secondary: #FFFFFF;
    --md-sys-color-secondary-container: #D4E4F6;
    --md-sys-color-on-secondary-container: #0D1D2A;
    --md-sys-color-tertiary: #67587A;
    --md-sys-color-on-tertiary: #FFFFFF;
    --md-sys-color-tertiary-container: #ECDCFF;
    --md-sys-color-on-tertiary-container: #221534;
    --md-sys-color-error: #BA1A1A;
    --md-sys-color-on-error: #FFFFFF;
    --md-sys-color-error-container: #FFDAD6;
    --md-sys-color-on-error-container: #410002;
    --md-sys-color-background: #F8F9FC;
    --md-sys-color-on-background: #1A1C1E;
    --md-sys-color-surface: #FCFCFF;
    --md-sys-color-on-surface: #1A1C1E;
    --md-sys-color-surface-variant: #DEE3EB;
    --md-sys-color-on-surface-variant: #42474E;
    --md-sys-color-outline: #72787E;
    --md-sys-color-outline-variant: #C2C7CE;
    --md-sys-color-shadow: #000000;
    --md-sys-color-scrim: #000000;
    --md-sys-color-inverse-surface: #2F3133;
    --md-sys-color-inverse-on-surface: #F0F0F3;
    --md-sys-color-inverse-primary: #95CCFF;
    --md-sys-color-surface-dim: #D9DADD;
    --md-sys-color-surface-bright: #FCFCFF;
    --md-sys-color-surface-container-lowest: #FFFFFF;
    --md-sys-color-surface-container-low: #F3F4F6;
    --md-sys-color-surface-container: #EDEEF1;
    --md-sys-color-surface-container-high: #E7E8EB;
    --md-sys-color-surface-container-highest: #E2E2E5;

    /* Typography */
    --md-sys-font-family-sans: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    --md-sys-font-family-mono: 'Roboto Mono', ui-monospace, monospace;

    /* Shape & Elevation */
    --md-sys-shape-corner-small: 4px;
    --md-sys-shape-corner-medium: 8px;
    --md-sys-shape-corner-large: 16px;
    --md-sys-shape-corner-extra-large: 28px;
    --md-sys-shape-corner-full: 9999px;
    --md-sys-elevation-1: 0 1px 2px 0 rgb(0 0 0 / 0.15), 0 1px 3px 1px rgb(0 0 0 / 0.1);
    --md-sys-elevation-2: 0 1px 2px 0 rgb(0 0 0 / 0.3), 0 2px 6px 2px rgb(0 0 0 / 0.15);
    --md-sys-elevation-3: 0 4px 8px 3px rgb(0 0 0 / 0.15), 0 1px 3px 0 rgb(0 0 0 / 0.3);
    --md-sys-elevation-4: 0 6px 10px 4px rgb(0 0 0 / 0.15), 0 2px 3px 0 rgb(0 0 0 / 0.3);
    --md-sys-elevation-5: 0 8px 12px 6px rgb(0 0 0 / 0.15), 0 4px 4px 0 rgb(0 0 0 / 0.3);
}

[data-theme="dark"] {
    /* Color Palette - Dark Theme */
    --md-sys-color-primary: #95CCFF;
    --md-sys-color-on-primary: #003351;
    --md-sys-color-primary-container: #004A72;
    --md-sys-color-on-primary-container: #CDE5FF;
    --md-sys-color-secondary: #B8C8DA;
    --md-sys-color-on-secondary: #233240;
    --md-sys-color-secondary-container: #394857;
    --md-sys-color-on-secondary-container: #D4E4F6;
    --md-sys-color-tertiary: #D0BFE7;
    --md-sys-color-on-tertiary: #382A4A;
    --md-sys-color-tertiary-container: #4F4161;
    --md-sys-color-on-tertiary-container: #ECDCFF;
    --md-sys-color-error: #FFB4AB;
    --md-sys-color-on-error: #690005;
    --md-sys-color-error-container: #93000A;
    --md-sys-color-on-error-container: #FFDAD6;
    --md-sys-color-background: #121416;
    --md-sys-color-on-background: #E2E2E5;
    --md-sys-color-surface: #1A1C1E;
    --md-sys-color-on-surface: #E2E2E5;
    --md-sys-color-surface-variant: #42474E;
    --md-sys-color-on-surface-variant: #C2C7CE;
    --md-sys-color-outline: #8C9198;
    --md-sys-color-outline-variant: #42474E;
    --md-sys-color-shadow: #000000;
    --md-sys-color-scrim: #000000;
    --md-sys-color-inverse-surface: #E2E2E5;
    --md-sys-color-inverse-on-surface: #2F3133;
    --md-sys-color-inverse-primary: #006399;
    --md-sys-color-surface-dim: #121416;
    --md-sys-color-surface-bright: #383A3C;
    --md-sys-color-surface-container-lowest: #0D0F11;
    --md-sys-color-surface-container-low: #1A1C1E;
    --md-sys-color-surface-container: #1E2022;
    --md-sys-color-surface-container-high: #282A2D;
    --md-sys-color-surface-container-highest: #333538;
}

/* ===== GLOBAL RESET & BASE STYLES ===== */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: var(--md-sys-font-family-sans);
    background-color: var(--md-sys-color-background);
    color: var(--md-sys-color-on-background);
    line-height: 1.6;
    font-size: 16px;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* ===== LAYOUT & NAVIGATION ===== */
.container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 32px;
    width: 100%;
    flex-grow: 1;
}

.top-app-bar {
    position: sticky;
    top: 0;
    z-index: 1000;
    background-color: var(--md-sys-color-surface);
    color: var(--md-sys-color-on-surface);
    border-bottom: 1px solid var(--md-sys-color-outline-variant);
    padding: 0 32px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 64px;
}

.app-title {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 20px;
    font-weight: 500;
}

.app-title .material-icons-round {
    font-size: 28px;
    color: var(--md-sys-color-primary);
}

.top-app-bar-actions {
    display: flex;
    gap: 8px;
    align-items: center;
}

#resetApp .material-icons-round {
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}
#resetApp:hover .material-icons-round {
    transform: rotate(-90deg);
}

/* ===== PAGE TITLE ===== */
.page-title-container {
    text-align: center;
    margin-bottom: 3rem;
    padding-top: 1rem;
}
.main-title {
    font-size: 3.5rem;
    font-weight: 800;
    line-height: 1.1;
    margin-bottom: 0.75rem;
    background: linear-gradient(45deg, var(--md-sys-color-primary), var(--md-sys-color-tertiary, var(--md-sys-color-primary)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
}
.subtitle {
    font-size: 1.15rem;
    color: var(--md-sys-color-on-surface-variant);
    max-width: 550px;
    margin: 0 auto;
    line-height: 1.6;
}
@media (max-width: 600px) {
    .main-title {
        font-size: 2.75rem;
    }
    .subtitle {
        font-size: 1rem;
    }
}

/* ===== INTERACTIVE ELEMENTS: BUTTONS ===== */
.md-button, .action-button {
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
    border: none;
    border-radius: var(--md-sys-shape-corner-full);
    padding: 10px 24px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    transition: all 0.2s ease-in-out;
    box-shadow: var(--md-sys-elevation-1);
    font-family: var(--md-sys-font-family-sans);
    text-decoration: none;
}

.md-button:hover, .action-button:hover {
    background-color: color-mix(in srgb, var(--md-sys-color-primary) 90%, black);
    box-shadow: var(--md-sys-elevation-2);
    transform: translateY(-1px);
}

.action-button.secondary {
    background-color: var(--md-sys-color-surface-container-high);
    color: var(--md-sys-color-primary);
    box-shadow: none;
    border: 1px solid var(--md-sys-color-outline);
}
.action-button.secondary:hover {
    background-color: var(--md-sys-color-surface-container-highest);
}

.md-icon-button {
    background-color: transparent;
    border: none;
    color: var(--md-sys-color-on-surface-variant);
    cursor: pointer;
    padding: 8px;
    border-radius: 50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s;
    width: 40px;
    height: 40px;
}

.md-icon-button:hover {
    background-color: var(--md-sys-color-surface-container-high);
    color: var(--md-sys-color-on-surface);
}

/* ===== FORMS & INPUTS ===== */
.text-input {
    width: 100%;
    padding: 12px 16px;
    border-radius: var(--md-sys-shape-corner-medium);
    border: 1px solid var(--md-sys-color-outline);
    background-color: var(--md-sys-color-surface-container-high);
    color: var(--md-sys-color-on-surface);
    font-size: 1rem;
    font-family: var(--md-sys-font-family-sans);
    box-sizing: border-box;
    transition: border-color 0.2s, box-shadow 0.2s;
}
.text-input::placeholder {
    color: var(--md-sys-color-on-surface-variant);
    opacity: 0.7;
}
.text-input:focus {
    outline: none;
    border-color: var(--md-sys-color-primary);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--md-sys-color-primary) 25%, transparent);
}

/* ===== UPLOAD & PASTE AREAS ===== */
.upload-section {
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.upload-area {
    background-color: var(--md-sys-color-surface-container-low);
    border: 2px dashed var(--md-sys-color-outline);
    border-radius: var(--md-sys-shape-corner-large);
    padding: 48px 24px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.upload-area:hover, .upload-area.dragover {
    border-color: var(--md-sys-color-primary);
    background-color: var(--md-sys-color-surface-container);
    transform: translateY(-4px);
    box-shadow: var(--md-sys-elevation-1);
}

.upload-area .material-icons-round {
    font-size: 64px;
    color: var(--md-sys-color-primary);
    margin-bottom: 16px;
}

.upload-area h2 {
    font-size: 24px;
    font-weight: 500;
    margin-bottom: 8px;
    color: var(--md-sys-color-on-surface);
}

.upload-area p {
    color: var(--md-sys-color-on-surface-variant);
}

.paste-area {
    width: 100%;
    min-height: 250px;
    padding: 20px;
    border-radius: var(--md-sys-shape-corner-medium);
    border: 1px solid var(--md-sys-color-outline);
    background-color: var(--md-sys-color-surface-container-low);
    color: var(--md-sys-color-on-surface);
    font-family: var(--md-sys-font-family-mono);
    font-size: 14px;
    resize: vertical;
    transition: all 0.2s;
}

.paste-area::placeholder {
    color: var(--md-sys-color-on-surface-variant);
}

.paste-area:focus {
    outline: none;
    border-color: var(--md-sys-color-primary);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--md-sys-color-primary) 25%, transparent);
}

/* ===== RESULTS SECTION & FILE CARDS ===== */
.results-section {
    display: none; /* Initially hidden */
    margin-top: 48px;
}

.files-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 24px;
}

@media (max-width: 768px) {
    .files-grid {
        grid-template-columns: 1fr;
    }
}

.file-card {
    background-color: var(--md-sys-color-surface-container);
    border-radius: var(--md-sys-shape-corner-large);
    box-shadow: var(--md-sys-elevation-1);
    transition: all 0.3s ease-in-out;
    overflow: hidden;
    border: 1px solid var(--md-sys-color-outline-variant);
}

.file-card:hover {
    box-shadow: var(--md-sys-elevation-3);
    transform: translateY(-4px);
    border-color: var(--md-sys-color-outline);
}

.file-card-header {
    padding: 16px;
    display: flex;
    align-items: flex-start;
    gap: 16px;
    cursor: pointer;
}

.file-icon {
    width: 40px;
    height: 40px;
    border-radius: var(--md-sys-shape-corner-full);
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.file-info {
    overflow: hidden;
}

.file-name {
    font-weight: 500;
    font-size: 16px;
    margin-bottom: 4px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-family: var(--md-sys-font-family-mono);
    color: var(--md-sys-color-on-surface);
}

.file-meta {
    display: flex;
    gap: 12px;
    font-size: 12px;
    color: var(--md-sys-color-on-surface-variant);
    align-items: center;
}

.file-ext {
    background-color: var(--md-sys-color-secondary-container);
    color: var(--md-sys-color-on-secondary-container);
    padding: 2px 8px;
    border-radius: var(--md-sys-shape-corner-small);
    font-size: 11px;
    text-transform: uppercase;
    font-weight: 700;
}

.first-line-preview {
    padding: 12px 16px;
    background-color: var(--md-sys-color-surface-container-low);
    border-top: 1px solid var(--md-sys-color-outline-variant);
    font-family: var(--md-sys-font-family-mono);
    font-size: 13px;
    color: var(--md-sys-color-on-surface-variant);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: pointer;
    transition: background-color 0.2s;
}

.file-card:hover .first-line-preview {
    background-color: var(--md-sys-color-surface-container-high);
    text-overflow: clip; /* Remove ellipsis to reveal scrolling text */
}

/* Scrolling animation for long first lines on hover */
.file-card:hover .first-line-preview code {
    /* This animation will only have a visual effect if the content overflows */
    display: inline-block; /* Required for transform to work */
    animation: scroll-text 10s linear 1s infinite alternate;
}

.file-actions {
    padding: 8px 16px 16px;
    display: flex;
    gap: 8px;
    justify-content: flex-end;
}

.file-actions .action-button {
    padding: 8px 16px;
    font-size: 13px;
    box-shadow: none;
}
.file-actions .action-button:hover {
    transform: none;
}

/* ===== CODE PREVIEW ===== */
.code-preview {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    background-color: #282c34; /* atom-one-dark background */
}

.file-card.expanded .code-preview {
    max-height: 600px;
    overflow-y: auto;
    border-top: 1px solid var(--md-sys-color-outline-variant);
}

.code-preview pre, .code-preview code {
    margin: 0;
    padding: 20px;
    font-size: 14px;
    line-height: 1.6;
    font-family: var(--md-sys-font-family-mono);
}

/* ===== FLOATING ACTION BUTTON (FAB) ===== */
.md-fab {
    position: fixed;
    bottom: 32px;
    right: 32px;
    width: 56px;
    height: 56px;
    border-radius: var(--md-sys-shape-corner-large);
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
    border: none;
    cursor: pointer;
    display: none; /* Controlled by JS */
    align-items: center;
    justify-content: center;
    box-shadow: var(--md-sys-elevation-3);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 100;
}

.md-fab:hover {
    box-shadow: var(--md-sys-elevation-4);
    background-color: color-mix(in srgb, var(--md-sys-color-primary-container) 92%, black);
}

/* ===== MODALS & OVERLAYS ===== */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2000;
    opacity: 0;
    transition: opacity 0.3s ease;
    backdrop-filter: blur(4px);
    pointer-events: none;
}

.modal-overlay.visible {
    opacity: 1;
    pointer-events: auto;
}

.modal-content {
    background-color: var(--md-sys-color-surface-container-low);
    padding: 32px;
    border-radius: var(--md-sys-shape-corner-extra-large);
    box-shadow: var(--md-sys-elevation-3);
    width: 90%;
    max-width: 500px;
    transform: scale(0.95);
    transition: transform 0.3s ease;
    position: relative;
}

.modal-overlay.visible .modal-content {
    transform: scale(1);
}

.modal-close-btn {
    position: absolute;
    top: 16px;
    right: 16px;
    z-index: 10;
    /* Uses .md-icon-button styles */
}

.modal-content h2 {
    font-size: 22px;
    font-weight: 500;
    color: var(--md-sys-color-on-surface);
    margin-bottom: 8px;
    text-align: center;
}

.modal-content p {
    color: var(--md-sys-color-on-surface-variant);
    margin-bottom: 24px;
    line-height: 1.5;
    text-align: center;
}

.modal-actions {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    margin-top: 24px;
}

/* ===== SHARE MODAL ===== */
#shareModal .modal-content {
    max-width: 580px;
}
.modal-section {
    margin-bottom: 24px;
}
.modal-section:last-child {
    margin-bottom: 0;
}
.modal-section-header {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 8px;
}
.modal-section-header h3 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 500;
    color: var(--md-sys-color-on-surface);
}
.modal-section-header .material-icons-round {
    color: var(--md-sys-color-primary);
}
.modal-section p {
    text-align: left;
    margin-top: 0;
    margin-bottom: 16px;
    color: var(--md-sys-color-on-surface-variant);
    font-size: 0.9rem;
    line-height: 1.5;
}
.modal-divider {
    border: none;
    border-top: 1px solid var(--md-sys-color-outline-variant);
    margin: 24px 0;
}
.share-actions, .follow-actions, .partner-actions {
    display: flex;
    gap: 12px;
    align-items: center;
    flex-wrap: wrap;
}
.social-icon-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    border-radius: 50%;
    background-color: var(--md-sys-color-surface-container-high);
    color: var(--md-sys-color-on-surface-variant);
    transition: all 0.2s;
    border: none;
    cursor: pointer;
    text-decoration: none;
}
.social-icon-button:hover {
    background-color: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
    transform: translateY(-2px);
}
.social-icon-button svg {
    width: 22px;
    height: 22px;
}

/* ===== COMMERCIAL DOWNLOAD POPUP ===== */
.popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 3000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0s linear 0.3s;
    backdrop-filter: blur(4px);
}

.popup-overlay.visible {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease;
}

#downloadPopup .popup-content {
    background-color: var(--md-sys-color-surface-container);
    border-radius: var(--md-sys-shape-corner-extra-large);
    box-shadow: var(--md-sys-elevation-4);
    width: 90%;
    max-width: 740px; /* Increased width for two-column layout */
    text-align: center;
    padding: 32px;
    transform: scale(0.95);
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.popup-overlay.visible #downloadPopup .popup-content {
    transform: scale(1);
}

#downloadPopup .popup-header h2 {
    font-size: 28px; /* Slightly larger */
    font-weight: 700; /* Bolder */
    color: var(--md-sys-color-on-surface);
    margin-bottom: 8px;
    line-height: 1.2;
}

#downloadPopup .popup-header p {
    color: var(--md-sys-color-on-surface-variant);
    font-size: 16px;
    margin: 0 auto;
    max-width: 500px;
}

/* New styles for the two-option layout */
.popup-main-options {
    display: flex;
    gap: 24px;
    margin: 32px 0;
}

.popup-option {
    flex: 1;
    background-color: var(--md-sys-color-surface-container-low);
    border-radius: var(--md-sys-shape-corner-large);
    padding: 24px;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 1px solid var(--md-sys-color-outline-variant);
    transition: all 0.2s ease-in-out;
}

.popup-option:hover {
    transform: translateY(-4px);
    box-shadow: var(--md-sys-elevation-2);
    border-color: var(--md-sys-color-outline);
}

.popup-option .option-icon {
    font-size: 40px;
    color: var(--md-sys-color-primary);
    margin-bottom: 16px;
}

.popup-option h3 {
    margin: 0 0 8px 0;
    font-size: 18px;
    font-weight: 500;
    color: var(--md-sys-color-on-surface);
}

.popup-option p {
    margin: 0 0 20px 0;
    font-size: 14px;
    color: var(--md-sys-color-on-surface-variant);
    flex-grow: 1;
    line-height: 1.5;
}

/* Generic button styles within the popup */
#downloadPopup .button-primary,
#downloadPopup .button-secondary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 24px;
    font-size: 14px;
    font-weight: 500;
    text-decoration: none;
    border-radius: var(--md-sys-shape-corner-full);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

#downloadPopup .button-primary {
    background-color: var(--md-sys-color-primary);
    color: var(--md-sys-color-on-primary);
    border: none;
    box-shadow: var(--md-sys-elevation-1);
}
#downloadPopup .button-primary:hover {
    box-shadow: var(--md-sys-elevation-2);
    transform: translateY(-1px);
    background-color: color-mix(in srgb, var(--md-sys-color-primary) 90%, black);
}

#downloadPopup .button-secondary {
    background-color: var(--md-sys-color-surface-container-high);
    color: var(--md-sys-color-primary);
    border: 1px solid var(--md-sys-color-outline);
}
#downloadPopup .button-secondary:hover {
    background-color: var(--md-sys-color-surface-container-highest);
}

.popup-option .button-primary,
.popup-option .button-secondary {
    width: 100%;
}

#downloadPopup .popup-footer {
    border-top: 1px solid var(--md-sys-color-outline-variant);
    padding-top: 24px;
    margin-top: 24px;
}

#downloadPopup .popup-footer h3 {
    font-size: 18px;
    font-weight: 500;
    color: var(--md-sys-color-on-surface);
    margin-bottom: 8px;
}

#downloadPopup .popup-footer p {
    font-size: 14px;
    color: var(--md-sys-color-on-surface-variant);
    text-align: center;
    max-width: 480px;
    margin: 0 auto 20px auto;
}

#downloadPopup .actions-container {
    display: flex;
    justify-content: center;
    gap: 12px;
    flex-wrap: wrap;
}

@media (max-width: 700px) {
    .popup-main-options {
        flex-direction: column;
    }
    #downloadPopup .popup-content {
        padding: 24px;
    }
}

/* ===== TOAST / SNACKBAR ===== */
#snackbar {
    position: fixed;
    bottom: 24px;
    left: 50%;
    transform: translateX(-50%) translateY(150%);
    background-color: var(--md-sys-color-inverse-surface);
    color: var(--md-sys-color-inverse-on-surface);
    padding: 14px 24px;
    border-radius: var(--md-sys-shape-corner-small);
    box-shadow: var(--md-sys-elevation-3);
    display: flex;
    align-items: center;
    gap: 12px;
    z-index: 2000;
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    max-width: 90%;
    font-size: 14px;
}

#snackbar.show {
    transform: translateX(-50%) translateY(0);
}

/* ===== FOOTER ===== */
#main-footer {
    text-align: center;
    padding: 48px 32px;
    background-color: var(--md-sys-color-surface-container);
    color: var(--md-sys-color-on-surface-variant);
    border-top: 1px solid var(--md-sys-color-outline-variant);
}

.social-links {
    margin-bottom: 24px;
    display: flex;
    justify-content: center;
    gap: 24px;
    flex-wrap: wrap;
}

.social-links a {
    color: var(--md-sys-color-on-surface-variant);
    text-decoration: none;
    transition: color 0.3s ease, transform 0.3s ease;
    font-size: 14px;
    font-weight: 500;
    display: inline-block;
}

.social-links a:hover {
    color: var(--md-sys-color-primary);
    transform: translateY(-2px);
}

.footer-credit {
    margin-bottom: 24px;
    font-size: 1rem;
    color: var(--md-sys-color-on-surface);
}

.footer-credit a {
    color: var(--md-sys-color-primary);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
}

.footer-credit a:hover {
    text-decoration: underline;
}

.heart {
    display: inline-block;
    color: var(--md-sys-color-error);
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

/* Keyframes for the scrolling animation */
@keyframes scroll-text {
    from {
        transform: translateX(0);
    }
    to {
        /* 
         * We scroll the text to the left.
         * The calculation moves the text left by its full width (-100%) and then
         * moves it back right by the approximate width of the container (320px).
         * We use min(0, ...) to prevent the text from scrolling to the right
         * if its content is shorter than the container width.
        */
        transform: translateX(min(0px, calc(-100% + 320px)));
    }
}